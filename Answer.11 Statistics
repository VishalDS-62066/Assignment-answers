# Code for Part A - To check whether the distribution of all classes is the same or not.

# Wilcoxon-signed-rank test

import matplotlib.pyplot as plt

before_bp = [130, 142, 120, 135, 148, 122, 137, 130, 142, 128, 135, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 142, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 142, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 142, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 142, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130]
after_bp = [120, 135, 118, 127, 140, 118, 129, 124, 137, 125, 129, 132, 125, 136, 118, 122, 130, 139, 123, 132, 131, 126, 120, 123, 139, 122, 129, 136, 127, 140, 119, 121, 129, 137, 122, 135, 131, 124, 119, 124, 139, 123, 131, 135, 130, 125, 121, 124, 139, 123, 131, 135, 130, 125, 121, 124, 139, 123, 131, 135, 130, 125, 121, 124, 139, 123, 131, 135, 130, 125, 121, 124, 118, 121, 129, 137, 122, 135, 131, 124, 119, 124, 139, 123, 131, 135, 130, 125, 121, 124, 118, 121, 129, 137, 122, 135, 131, 124, 119, 124, 139, 123, 131, 135, 130, 125]

plt.hist(before_bp, bins=10, alpha=0.5, label='Before')
plt.hist(after_bp, bins=10, alpha=0.5, label='After')
plt.xlabel('Blood Pressure (mmHg)')
plt.ylabel('Frequency')
plt.title('Distribution of Blood Pressure Before and After')
plt.legend()
plt.show()

# Output - plot of Distribution of blood pressure Before and After - 
        #  Blood pressure in mmHg (X-axis) vs Frequency(Y-axis) 

# Code for Part B- To check the equality of variance between the two classes (Before and After).

# F-test or Levene's test. 
import matplotlib.pyplot as plt

before_bp = [130, 142, 120, 135, 148, 122, 137, 130, 142, 128, 135, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 142, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 142, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 142, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 142, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130]
after_bp = [120, 135, 118, 127, 140, 118, 129, 124, 137, 125, 129, 132, 125, 136, 118, 122, 130, 139, 123, 132, 131, 126, 120, 123, 139, 122, 129, 136, 127, 140, 119, 121, 129, 137, 122, 135, 131, 124, 119, 124, 139, 123, 131, 135, 130, 125, 121, 124, 139, 123, 131, 135, 130, 125, 121, 124, 139, 123, 131, 135, 130, 125, 121, 124, 139, 123, 131, 135, 130, 125, 121, 124, 118, 121, 129, 137, 122, 135, 131, 124, 119, 124, 139, 123, 131, 135, 130, 125, 121, 124, 118, 121, 129, 137, 122, 135, 131, 124, 119, 124, 139, 123, 131, 135, 130, 125]

from scipy.stats import levene

stat, p = levene(before_bp, after_bp)
alpha = 0.05  # significance level

if p > alpha:
    print("The variances are equal.")
else:
    print("The variances are not equal.")
    
# Output - The Variances are Equal.    

# Code for Part C - To Check the equality of mean for between all the classes. 

# t-test or Mann-Whitney-U test.

import matplotlib.pyplot as plt

before_bp = [130, 142, 120, 135, 148, 122, 137, 130, 142, 128, 135, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 142, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 142, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 142, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 142, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130, 128, 136, 140, 132, 145, 124, 128, 136, 143, 127, 139, 135, 131, 127, 130]
after_bp = [120, 135, 118, 127, 140, 118, 129, 124, 137, 125, 129, 132, 125, 136, 118, 122, 130, 139, 123, 132, 131, 126, 120, 123, 139, 122, 129, 136, 127, 140, 119, 121, 129, 137, 122, 135, 131, 124, 119, 124, 139, 123, 131, 135, 130, 125, 121, 124, 139, 123, 131, 135, 130, 125, 121, 124, 139, 123, 131, 135, 130, 125, 121, 124, 139, 123, 131, 135, 130, 125, 121, 124, 118, 121, 129, 137, 122, 135, 131, 124, 119, 124, 139, 123, 131, 135, 130, 125, 121, 124, 118, 121, 129, 137, 122, 135, 131, 124, 119, 124, 139, 123, 131, 135, 130, 125]

from scipy.stats import ttest_ind

stat, p = ttest_ind(before_bp, after_bp)
alpha = 0.05  # significance level

if p > alpha:
    print("The means are equal.")
else:
    print("The means are not equal.")
    
# Output - The Means are not equal.    



